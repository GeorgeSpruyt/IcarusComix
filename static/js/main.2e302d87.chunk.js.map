{"version":3,"sources":["videos/greatbcraftsman0001-00700001-0070.mkv","videos/killingnephew.mkv","videos/sailingtocrete.mkv","videos/meetingtheking.mkv","videos/minotaur0001-0060.mkv","videos/in-the-tower0001-0090.mkv","videos/makingthewings0001-0080.mkv","videos/yes0001-0250.mkv","videos/ninja-vanish0001-0075.mkv","components/videopanel.js","components/textpanel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","VideoPanel","props","react_default","a","createElement","className","style","position","fontSize","concat","fontsize","fontFamily","color","left","top","text","width","src","vid","type","autoPlay","loop","muted","onerror","textPanel","App","videopanel","greatCraftsman","killingnephew","sailingtocrete","meetingtheking","minotaur","inthetower","textpanel","makingthewings","plunge","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+ECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,4DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,+DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,mECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qECAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,kHCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2QCkCzBC,QAhCI,SAAAC,GACjB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,MAAO,CAC7BC,SAAU,aAIVL,EAAAC,EAAAC,cAAA,OACAE,MAAO,CACLC,SAAU,WACVC,SAAQ,GAAAC,OAAKR,EAAMS,SAAX,MACRC,WAAW,OACXC,MAAM,QACNC,KAAM,KACNC,IAAK,QAIJb,EAAMc,MAETb,EAAAC,EAAAC,cAAA,SACEY,MAAM,OACNC,IAAKhB,EAAMiB,IACXC,KAAK,4CACLC,UAAQ,EACRC,MAAI,EACJC,OAAO,EACPC,QAAQ,qBCHDC,EAxBG,SAAAvB,GAChB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,MAAO,CAC7BC,SAAU,aAIVL,EAAAC,EAAAC,cAAA,OACAE,MAAO,CACLC,SAAU,WACVC,SAAQ,GAAAC,OAAKR,EAAMS,SAAX,MACRC,WAAW,OACXC,MAAM,aACNC,KAAM,MACNC,IAAK,QAIJb,EAAMc,QC2BAU,MAlCf,WACE,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAOH,EAAAC,EAAAC,cAACsB,EAAD,CAAYhB,SAAU,EAAGK,KAAK,+BAA+BG,IAAKS,QAIxFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAACsB,EAAD,CAAYhB,SAAU,EAAGK,KAAK,iBAAiBG,IAAMU,OAC3E1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAACsB,EAAD,CAAYhB,SAAU,EAAGK,KAAK,QAAQG,IAAMW,OAClE3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAf,IAAsBH,EAAAC,EAAAC,cAACsB,EAAD,CAAahB,SAAU,EAAGK,KAAK,sBAAsBG,IAAMY,QAInF5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAOH,EAAAC,EAAAC,cAACsB,EAAD,CAAYhB,SAAU,EAAGK,KAAK,eAAcG,IAAKa,OACvE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACsB,EAAD,CAAYhB,SAAU,EAAEK,KAAK,uBAAuBG,IAAKc,OACnF9B,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC6B,EAAD,CAAYvB,SAAU,EAAGK,KAAM,4DAGpCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAMH,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACsB,EAAD,CAAYR,IAAKgB,OAC3ChC,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAC6B,EAAD,CAAYvB,SAAU,EAAGK,KAAM,oDACpCb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAf,IAAuBH,EAAAC,EAAAC,cAACsB,EAAD,CAAahB,SAAU,EAAGK,KAAM,eAAgBG,IAAKiB,UC1B9DC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.2e302d87.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/greatbcraftsman0001-00700001-0070.7b1ee711.mkv\";","module.exports = __webpack_public_path__ + \"static/media/killingnephew.e80ed940.mkv\";","module.exports = __webpack_public_path__ + \"static/media/sailingtocrete.5c25742f.mkv\";","module.exports = __webpack_public_path__ + \"static/media/meetingtheking.e775f2ef.mkv\";","module.exports = __webpack_public_path__ + \"static/media/minotaur0001-0060.bbd7e569.mkv\";","module.exports = __webpack_public_path__ + \"static/media/in-the-tower0001-0090.f8969242.mkv\";","module.exports = __webpack_public_path__ + \"static/media/makingthewings0001-0080.b1cf1a7e.mkv\";","module.exports = __webpack_public_path__ + \"static/media/yes0001-0250.941bd064.mkv\";","module.exports = __webpack_public_path__ + \"static/media/ninja-vanish0001-0075.f5bd3bba.mkv\";","import React from \"react\";\r\nimport \"../App.css\";\r\nconst VideoPanel = props => {\r\n  return (\r\n    <div className=\"gutter\" style={{\r\n      position: \"relative\",\r\n      \r\n      \r\n    }}>\r\n      <div\r\n      style={{\r\n        position: \"absolute\",\r\n        fontSize: `${props.fontsize}vw`,\r\n        fontFamily:'Mali',\r\n        color:\"white\",\r\n        left: \"5%\",\r\n        top: \"70%\",\r\n        \r\n      }}\r\n      >\r\n        {props.text}\r\n      </div>\r\n      <video\r\n        width=\"100%\"\r\n        src={props.vid}\r\n        type='video/x-matroska; codecs=\"theora, vorbis\"'\r\n        autoPlay\r\n        loop\r\n        muted={true}\r\n        onerror=\"failed(event)\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default VideoPanel;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\nconst textPanel = props => {\r\n  return (\r\n    <div className=\"gutter\" style={{\r\n      position: \"relative\",\r\n      \r\n      \r\n    }}>\r\n      <div\r\n      style={{\r\n        position: \"absolute\",\r\n        fontSize: `${props.fontsize}vw`,\r\n        fontFamily:'Mali',\r\n        color:\"blackwhite\",\r\n        left: \"10%\",\r\n        top: \"2em\",\r\n        \r\n      }}\r\n      >\r\n        {props.text}\r\n      </div>\r\n       \r\n    </div>\r\n  );\r\n};\r\nexport default textPanel;\r\n","import React from \"react\";\r\nimport ninja from \"./videos/ninja-vanish0001-0075.mkv\";\r\nimport greatCraftsman from \"./videos/greatbcraftsman0001-00700001-0070.mkv\";\r\nimport killingnephew from \"./videos/killingnephew.mkv\"\r\nimport sailingtocrete from \"./videos/sailingtocrete.mkv\"\r\nimport meetingtheking from \"./videos/meetingtheking.mkv\"\r\nimport minotaur from \"./videos/minotaur0001-0060.mkv\"\r\nimport inthetower from \"./videos/in-the-tower0001-0090.mkv\"\r\nimport makingthewings from \"./videos/makingthewings0001-0080.mkv\"\r\nimport plunge from \"./videos/yes0001-0250.mkv\"\r\nimport VideoPanel from \"./components/videopanel\";\r\nimport TextPanel from \"./components/textpanel\"\r\nimport \"./App.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"flex-grid\">\r\n        <div className=\"col3\"><VideoPanel fontsize={5} text=\"Daedalus the great craftsman\" vid={greatCraftsman} /></div>\r\n        \r\n        </div>\r\n\r\n        <div className=\"flex-grid\">\r\n        <div className=\"col\"> <VideoPanel fontsize={2} text=\"An act of envy\" vid={ killingnephew} /></div>\r\n        <div className=\"col\"> <VideoPanel fontsize={2} text=\"Exile\" vid={ sailingtocrete} /></div>\r\n        <div className=\"col\"> <VideoPanel  fontsize={2} text=\"Engaged by a tyrant\" vid={ meetingtheking } /></div>\r\n        </div>\r\n        \r\n\r\n      <div className=\"flex-grid\">\r\n      \r\n      <div className=\"col2\"><VideoPanel fontsize={5} text=\"The Minotaur\"vid={minotaur} /></div>\r\n      <div className=\"col\"><div><VideoPanel fontsize={2}text=\"An ungrateful tyrant\" vid={inthetower} /></div>\r\n      <div><TextPanel  fontsize={2} text={\"Surely the greatest creator can come up with a plan!\"} /></div></div>\r\n      </div>\r\n\r\n      <div className=\"flex-grid\">\r\n      <div className=\"col\"><div><VideoPanel vid={makingthewings} /></div>\r\n      <div><TextPanel  fontsize={2} text={\"Working franctically through the night again!\"} /></div></div>\r\n      <div className=\"col2\"> <VideoPanel  fontsize={4} text={\"Alas Icarus!\"} vid={plunge} /></div>\r\n       \r\n      </div>\r\n\r\n       \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}